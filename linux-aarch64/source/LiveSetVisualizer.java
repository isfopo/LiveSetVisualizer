/* autogenerated by Processing revision 1282 on 2022-05-23 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import oscP5.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class LiveSetVisualizer extends PApplet {



OscP5 oscP5;
ArrayList<PImage> images = new ArrayList<PImage>();
int fade = 0;
int hue = 0;

String[] tracks = {
  "Gutiar",
  "Bass",
  "Minilogue",
};

String[] imageFiles = {
  "icons/sound.png",
  "icons/shape.png",
  "icons/place.png",
  "icons/memory.png",
};

int[] colors = {
  color(0, 153, 204, 100)
};

 public void setup() {
  frameRate(30);
  /* size commented out by preprocessor */;
  /* pixelDensity commented out by preprocessor */;
  colorMode(HSB, 400);
  
  oscP5 = new OscP5(this,12000);

  for (String file : imageFiles) {
    images.add(loadImage(file));
  }
}

 public void draw() {
  background(255);
  for (int i = 0; i < images.size(); i = i+1) {
    image(images.get(i), i*350+ 100, 200, 300, 300);
  }
  fill(hue, 255, 255, 100);
  rect(0, 0, width, height);
  fill(0, fade);
  rect(0, 0, width, height);
}

 public void oscEvent(OscMessage message) {
  if (message.addrPattern().equals("/fade")) {
    fade = message.get(0).intValue();
  } else if (message.addrPattern().equals("/hue")) {
    hue = message.get(0).intValue();
  }
}


  public void settings() { fullScreen();
pixelDensity(2); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "LiveSetVisualizer" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
